{
  "id": "2dd4a7987248cbd60dee6635f4b6045d",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.8.24",
  "solcLongVersion": "0.8.24+commit.e11b9ed9",
  "input": {
    "language": "Solidity",
    "sources": {
      "contracts/Lock.sol": {
        "content": "// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.24;\n\n// interface IBlast {\n//   // Note: the full interface for IBlast can be found below\n//   function configureClaimableGas() external;\n//   function claimAllGas(address contractAddress, address recipient) external returns (uint256);\n// }\n\ncontract Lock {\n    //   IBlast public constant BLAST = IBlast(0x4300000000000000000000000000000000000002);\n\n    constructor() {\n        // This sets the Gas Mode for MyContract to claimable\n        // BLAST.configureClaimableGas();\n    }\n\n    //   // Note: in production, you would likely want to restrict access to this\n    //   function claimMyContractsGas() external {\n    //     BLAST.claimAllGas(address(this), msg.sender);\n    //   }\n}\n"
      }
    },
    "settings": {
      "evmVersion": "paris",
      "optimizer": {
        "enabled": false,
        "runs": 200
      },
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers",
            "metadata"
          ],
          "": [
            "ast"
          ]
        }
      }
    }
  },
  "output": {
    "sources": {
      "contracts/Lock.sol": {
        "ast": {
          "absolutePath": "contracts/Lock.sol",
          "exportedSymbols": {
            "Lock": [
              6
            ]
          },
          "id": 7,
          "license": "UNLICENSED",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".24"
              ],
              "nodeType": "PragmaDirective",
              "src": "39:24:0"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "Lock",
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 6,
              "linearizedBaseContracts": [
                6
              ],
              "name": "Lock",
              "nameLocation": "311:4:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 4,
                    "nodeType": "Block",
                    "src": "429:111:0",
                    "statements": []
                  },
                  "id": 5,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "426:2:0"
                  },
                  "returnParameters": {
                    "id": 3,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "429:0:0"
                  },
                  "scope": 6,
                  "src": "415:125:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                }
              ],
              "scope": 7,
              "src": "302:442:0",
              "usedErrors": [],
              "usedEvents": []
            }
          ],
          "src": "39:706:0"
        },
        "id": 0
      }
    },
    "contracts": {
      "contracts/Lock.sol": {
        "Lock": {
          "abi": [
            {
              "inputs": [],
              "stateMutability": "nonpayable",
              "type": "constructor"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {
                "@_5": {
                  "entryPoint": null,
                  "id": 5,
                  "parameterSlots": 0,
                  "returnSlots": 0
                }
              },
              "generatedSources": [],
              "linkReferences": {},
              "object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea2646970667358221220b59de4d47e93b5e76c197e29327ec223166881c2df9ed442386e840d0bf6b86064736f6c63430008180033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB5 SWAP14 0xE4 0xD4 PUSH31 0x93B5E76C197E29327EC223166881C2DF9ED442386E840D0BF6B86064736F6C PUSH4 0x43000818 STOP CALLER ",
              "sourceMap": "302:442:0:-:0;;;415:125;;;;;;;;;;302:442;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "6080604052600080fdfea2646970667358221220b59de4d47e93b5e76c197e29327ec223166881c2df9ed442386e840d0bf6b86064736f6c63430008180033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB5 SWAP14 0xE4 0xD4 PUSH31 0x93B5E76C197E29327EC223166881C2DF9ED442386E840D0BF6B86064736F6C PUSH4 0x43000818 STOP CALLER ",
              "sourceMap": "302:442:0:-:0;;;;;"
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Lock.sol\":\"Lock\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Lock.sol\":{\"keccak256\":\"0x279fa24ff8208712f682b658d59860628635033e275dc6150c4ca19e93cd853b\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://6f6ebc2563afcd94ffc64c3edb726cdf540ffa889d5d832df2ba407a0752cfec\",\"dweb:/ipfs/QmeBfvsPDHrZUgGzcx4ZBH5xd9ZaHomLHp3izRjypdjzQb\"]}},\"version\":1}"
        }
      }
    }
  }
}